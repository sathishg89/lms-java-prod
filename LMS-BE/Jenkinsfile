pipeline {
    agent any

    stages {
        stage('Check Docker Network') {
            steps {
                script {
                    def networkExists = sh(script: 'docker network inspect lmsnetwork > /dev/null 2>&1', returnStatus: true)
                    if (networkExists == 0) {
                        echo 'Docker network lmsnetwork already exists'
                    } else {
                        sh 'docker network create -d bridge lmsnetwork'
                    }
                }
            }
        }

        stage('Check Database Container') {
            steps {
                script {
                    def containerExists = sh(script: 'docker inspect -f {{.State.Running}} mysql', returnStatus: true)
                    if (containerExists == 0) {
                        echo 'MySQL container already exists'
                    } else {
                        sh 'docker container run -d --name mysql --network lmsnetwork -e MYSQL_ROOT_PASSWORD=Qwerty@123 -p 3306:3306 mysql:latest'
                    }
                }
            }
        }

        stage('Old container') {
            steps {
                script {
                    def containerRunning = sh(script: 'docker inspect -f {{.State.Running}} be', returnStatus: true)
                    if (containerRunning == 0) {
                        sh 'docker container stop be' // Stop the existing container
                        sh 'docker container rm be' // Remove the existing container
                    } else {
                        sh 'echo container not exist'
                    }
                }
            }
        }

        stage('Docker Build') {
            steps {
                sh 'cd LMS-BE && docker build -t backend .'
            }
        }

        stage('Docker Container') {
            steps {
                sh 'docker container run -dt --name be --network lmsnetwork -p 8080:8080 backend'
            }
        }
    }
}
